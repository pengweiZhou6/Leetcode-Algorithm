/** https://leetcode.com/problems/reverse-linked-list/
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {

    public ListNode reverseList(ListNode head) {
        ListNode rev = null;
        ListNode temp = null;
        ListNode nextT = head;

        if(head == null){
            return null;
        }

        while(head != null){
            nextT = nextT.next;

            temp = head;
            temp.next = rev;
            rev = temp;

            head = nextT;
        }

        return rev;
    }
}

// public ListNode reverseList(ListNode head) {
//     ListNode prev = null;
//     ListNode curr = head;
//     while (curr != null) {
//         ListNode nextTemp = curr.next;
//         curr.next = prev;
//         prev = curr;
//         curr = nextTemp;
//     }
//     return prev;
// }